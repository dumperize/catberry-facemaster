// Common styles of the project
*, :before, :after {
    box-sizing: border-box;
}

html, body {
    height: 100%;
    font-family: 'PT Sans Caption', sans-serif;
    background-color: $color-bg;
    color: $color-text;
}

.bg {
    &_grey {
        background: $color-bg-grey-light;
    }
    &_orange {
        background: $color-orange;
    }
}

.format {
    ul, ol {
        line-height: 1.3em;
        margin-bottom: 14px;
        margin-top: 14px
    }
    ul li {
        position: relative;
        padding-left: 17px;
        padding-right: 20px;
        margin-bottom: 10px;
    }
    ul li:before {
        content: "â€”";
        position: absolute;
        left: 0px;
    }
    p {
        margin-bottom: 10px;
    }
}

h1, .h1 {
    font-size: 25px; /*ie8*/
    font-size: 1.5625rem;
    font-weight: normal;
}

.h1_style {
    text-transform: uppercase;
    color: $color-orange;
    font-weight: bold
}
h2, .h2{
    font-size: 22px; /*ie8*/
    font-weight: bold;
    margin-bottom: 5px;
    color: $color-text;
    text-transform: uppercase;
    @include font-tuning(22, 26);
}

p {
    line-height: 1.3em
}

.page {

}

.page__wrapper {
    min-height: 100%;
    margin-bottom: -50px;
}

* html .page__wrapper {
    height: 100%;
}

.page__buffer {
    height: 50px;
    width: 40px;
}

//
// Grid system
// --------------------------------------------------

// Container widths
//
// Set the container width, and override it for fixed navbars in media queries.

.container {
    @include container-fixed;

    @media (max-width: $screen-sm-min - 1) {
        width: $container-xs;
    }
    @media (min-width: $screen-sm-min) {
        width: $container-sm;
    }
    @media (min-width: $screen-md-min) {
        width: $container-md;
    }
    @media (min-width: $screen-lg-min) {
        width: $container-lg;
    }
}

// Fluid container
//
// Utilizes the mixin meant for fixed width containers, but without any defined
// width for fluid, full width layouts.

.container-fluid {
    @include container-fixed;
}

// Row
//
// Rows contain and clear the floats of your columns.

.row {
    @include make-row;
}

// Columns
//
// Common styles for small and large grid columns

@include make-grid-columns;

// Extra small grid
//
// Columns, offsets, pushes, and pulls for extra small devices like
// smartphones.

@include make-grid(xs);

// Small grid
//
// Columns, offsets, pushes, and pulls for the small device range, from phones
// to tablets.

@media (min-width: $screen-sm-min) {
    @include make-grid(sm);
}

// Medium grid
//
// Columns, offsets, pushes, and pulls for the desktop device range.

@media (min-width: $screen-md-min) {
    @include make-grid(md);
}

// Large grid
//
// Columns, offsets, pushes, and pulls for the large desktop device range.

@media (min-width: $screen-lg-min) {
    @include make-grid(lg);
}

.page-title {
    &_landing {
        text-align: center;
        font-weight: bold;
        color: $color-orange;
        @include at(lg) {
            @include font-tuning(35, 42);
        }
        @include at(md) {
            @include font-tuning(30, 36);
        }
        @include at(sm) {
            @include font-tuning(21, 28);
        }
        @include at(xs) {
            @include font-tuning(18, 25);
        }
    }
}

.sub-title {
    @include at(lg) {
        @include font-tuning(25, 46);
    }
    @include at(md) {
        @include font-tuning(20, 25);
    }
    @include at(sm) {
        @include font-tuning(17, 23);
    }
    @include at(xs) {
        @include font-tuning(15, 20);
    }
}